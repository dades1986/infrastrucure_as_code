**********Ad-hoc self scripts***
xxxx.sh

terraform :

*****configuration management ***** : 

1-install and manage software on existing infrastructure resources such as servers, databases, networking devices etc etc

2-maintain consistent and a standard stucture of code

3-easy to manage and upodate if needed

4-run multiple remote resource at once

5-ansible playbook or role can be checked into a version control repository

6-idempotent

Ansible
puppet
saltstack
Chef


*****server templating *****: 
1-create a custom image of a virtual machine or a container
2-images contain already all the required software and dependencies installed on them 
3-immutuable infrastructure: once the VM ora container is deployed,it's designed to remain unchanged
if there are changes to be made to the image, instead of updating the running instance
like the case of configuration management tools, we update the image and re-deploy a new instance
using the updated image


docker
packer
vagrant


*****provisioning tool *****:
1-deploy immutable infrastructure resources(VM, databses, vpc, subnet,security group, storage) servers, databases, network xomponents etc.
2-multiple providers : vendor agnostic : gpc, aws , azure,..


terraform
cloud formation

-------------------------------------

ON-pREMISE VsPHERE CLUSTER


-------------providers ------
1-how does terraform manage infrastructure on so many different kinds of platforms?----------
2-a provider helps Terraform manage third party platforms through their API, providers enable Terraform to manage cloud platforms like AWS,GCp, azure as wellas network infrastructure like 
BigIp
CloudFlare
DNS
Palo Alto
Infoblox

as well as moitoring and data managment tools like :
DataDog
Grafana
Auth0
WaveFront
Sumo Logic

as well database like 

InfluxDB
mongoDB
Mysql
PostgreSql

as well as version controll systems like:
Github
BitBucket
Gitlab

Terraform supports hundreds of such providers , and as result can work with almost every infrastructure plateform.

-----------HCL: HashiCorp Configuration language------------
1-simple declarative language
2-block of code : resources
3-tf extension

-------phases of terraform-----

main.tf (desired state)---->init,Plan , apply----->real world infrastructure (target state)


init: 
1-Terraform inializes the project
2-identify the providers to be used for the target env

plan :

1-terraform drafts a plan to get the target state

apply:
1-terraform makes the necessary changes required on the target env, to bring it to the desired state

A) -if for some reason the env was to shift, from the desired state, then the subsequent terraform apply will be bring it back to the desired state, by only fixing the missing component.

B) -Every object that terraform manages is called a resource : compute instance, database erver in the cloud or on a physical server on premise that terraform manages.

C) -Terraform manage yhe lifecycle of the resources from it's proviioning to configuration to decommissioning

D)-Terraform records the state of the infrastructure as it is seen in the reel world, and based on this, it can determine what actions to take when updating resources for a particular platform

E)- Terraform can ensure that the entire infrastructure is always in the defined state at all times

F)- the state is a blueprint(model cible) of the infrastructure deployed by Terraform(terraform.tfstate)

G)-Terraform can read attributes of existing infrastructure componenets by configuring datasources, this can later be used for configuring other resources within terraform

H)-Terraform can also import other resources outside of Terraform, that either created manually or by means of other IAC tools
and bring it under its control so that can  manage those resources going forward

-----------Terraform Cloud and Terraform Entreprise------
Terraform Cloud and Terraform Entreprise provide additinal features that allo simplified collaboration between teams managing infrastructure improved security and centralized UI to manage Terraform deployments
All these features make Terraform an excellent entreprise grade infrastucture provisionning tool


